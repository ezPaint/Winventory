<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simoncomputing.app.winventory.dao.AddressDao">

    <resultMap id="AddressMapper" type="com.simoncomputing.app.winventory.domain.Address">
        <result column ="KEY"                 property = "key" />
        <result column ="NAME"                property = "name" />
        <result column ="STREET1"             property = "street1" />
        <result column ="STREET2"             property = "street2" />
        <result column ="CITY"                property = "city" />
        <result column ="STATE"               property = "state" />
        <result column ="ZIPCODE"             property = "zipcode" />
        <result column ="IS_ACTIVE"           property = "isActive" />
    </resultMap>

    <select id="read" parameterType="map" resultMap="AddressMapper">
        select * from ADDRESS
        where ${where}
    </select>

    <insert id="create" parameterType="com.simoncomputing.app.winventory.domain.Address">
        <selectKey resultType="_long" keyProperty="key" order="BEFORE">
            select ADDRESS_SEQ.nextval from dual
        </selectKey>
        insert into ADDRESS
        (
            KEY , NAME , STREET1 , STREET2 , CITY , 
            STATE , ZIPCODE , IS_ACTIVE
        )
        values
        (
            #{key} , #{name} , #{street1} , #{street2} , #{city} , 
            #{state} , #{zipcode} , #{isActive}
        )
    </insert>

    <select id="getListByIsActive" parameterType="boolean" resultMap="AddressMapper">
        select * from ADDRESS
        where IS_ACTIVE = #{isActive}
    </select>


    <update id="update" parameterType="com.simoncomputing.app.winventory.domain.Address">
        update ADDRESS set
            KEY                                 = #{key} ,
            NAME                                = #{name} ,
            STREET1                             = #{street1} ,
            STREET2                             = #{street2} ,
            CITY                                = #{city} ,
            STATE                               = #{state} ,
            ZIPCODE                             = #{zipcode} ,
            IS_ACTIVE                           = #{isActive}
        where KEY = #{key}
    </update>

    <delete id="delete" parameterType="map">
        delete from ADDRESS
        where ${where}
    </delete>


    <!-- PROTECTED CODE -->
    
    <select id="getAll" resultMap="AddressMapper">
		select * from ADDRESS;
	</select>
	
	 <select id="getAllActive" resultMap="AddressMapper">
		select * from ADDRESS where IS_ACTIVE = '1';
	</select>

</mapper>